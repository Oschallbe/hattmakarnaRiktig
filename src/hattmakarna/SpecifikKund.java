/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hattmakarna;

import java.util.HashMap;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author iftinserar
 */
public class SpecifikKund extends javax.swing.JFrame {

    private static InfDB idb;
    private String inloggadAnvandare;
    private int kundID;

    /**
     * Creates new form SpecifikKund
     */
    public SpecifikKund(InfDB idb, String inloggadAnvandare, int kundID) {
        this.idb = idb;
        this.inloggadAnvandare = inloggadAnvandare;
        this.kundID = kundID;
        initComponents();
        fyllKundDetaljer();
        setEditable(false); // Gör fälten icke-redigerbara vid start

    }

    private void fyllKundDetaljer() {
        try {
            String query = "SELECT * FROM Kund WHERE KundID = " + kundID + ";";
            HashMap<String, String> kundData = idb.fetchRow(query);

            if (kundData != null) {
                String fornamn = kundData.get("Fornamn");
                String efternamn = kundData.get("Efternamn");
                String matt = kundData.get("Matt");
                String epost = kundData.get("Epost");
                String telefonnummer = kundData.get("Telefonnummer");
                String leveransOrt = kundData.get("LeveransOrt");
                String fakturaOrt = kundData.get("FakturaOrt");
                String leveransAdress = kundData.get("LeveransAdress");
                String fakturaAdress = kundData.get("FakturaAdress");

                // Sätt värdena för textfälten
                txtKundID.setText(String.valueOf(kundID));
                txtFornamn.setText(fornamn);
                txtEfternamn.setText(efternamn);
                txtfHuvudmått.setText(matt);
                txtEpost.setText(epost);
                txtTelefonnummer.setText(telefonnummer);
                txtLeveransort.setText(leveransOrt);
                txtLeveransAdress.setText(leveransAdress);
                txtFakturaAdress.setText(fakturaAdress);
                txtFakturaort.setText(fakturaOrt);

            } else {
                JOptionPane.showMessageDialog(this, "Kunden kunde inte hittas.");
            }
        } catch (InfException ex) {
            JOptionPane.showMessageDialog(this, "Ett fel inträffade vid hämtning av kundinfo: " + ex.getMessage());
        }
    }

    // Gör alla textfält redigerbara eller inte
    private void setEditable(boolean editable) {
        txtFornamn.setEditable(editable);
        txtEfternamn.setEditable(editable);
        txtfHuvudmått.setEditable(editable);
        txtEpost.setEditable(editable);
        txtTelefonnummer.setEditable(editable);
        txtLeveransort.setEditable(editable);
        txtFakturaort.setEditable(editable);
        txtLeveransAdress.setEditable(editable);
        txtFakturaAdress.setEditable(editable);
        BtnSpara.setEnabled(editable); // Spara-knappen kan bara användas om fälten är redigerbara
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblKundID = new javax.swing.JLabel();
        lblFornamn = new javax.swing.JLabel();
        lblEfternamn = new javax.swing.JLabel();
        lblEpost = new javax.swing.JLabel();
        lblTelefonnummer = new javax.swing.JLabel();
        lblLeveransadress = new javax.swing.JLabel();
        BtnTaBort = new javax.swing.JButton();
        BtnRedigera = new javax.swing.JButton();
        BtnSpara = new javax.swing.JButton();
        btnTillbaka = new javax.swing.JButton();
        lblFakturaadress = new javax.swing.JLabel();
        txtKundID = new javax.swing.JTextField();
        txtFornamn = new javax.swing.JTextField();
        txtEfternamn = new javax.swing.JTextField();
        txtEpost = new javax.swing.JTextField();
        txtTelefonnummer = new javax.swing.JTextField();
        txtLeveransAdress = new javax.swing.JTextField();
        txtFakturaAdress = new javax.swing.JTextField();
        txtLeveransort = new javax.swing.JTextField();
        txtFakturaort = new javax.swing.JTextField();
        lblFakturaort = new javax.swing.JLabel();
        lblLeveransort = new javax.swing.JLabel();
        txtfHuvudmått = new javax.swing.JTextField();
        lblHuvudmått = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setText("Kund");

        lblKundID.setText("KundID");

        lblFornamn.setText("Fornamn");

        lblEfternamn.setText("Efternamn");

        lblEpost.setText("E-post");

        lblTelefonnummer.setText("Telefonnummer");

        lblLeveransadress.setText("Leveransadress");

        BtnTaBort.setText("Ta bort");
        BtnTaBort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnTaBortActionPerformed(evt);
            }
        });

        BtnRedigera.setText("Redigera");
        BtnRedigera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRedigeraActionPerformed(evt);
            }
        });

        BtnSpara.setText("Spara");
        BtnSpara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSparaActionPerformed(evt);
            }
        });

        btnTillbaka.setText("Tillbaka");
        btnTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaActionPerformed(evt);
            }
        });

        lblFakturaadress.setText("Fakturaadress");

        lblFakturaort.setText("Ort");

        lblLeveransort.setText("Ort");

        txtfHuvudmått.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfHuvudmåttActionPerformed(evt);
            }
        });

        lblHuvudmått.setText("Huvudmått");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BtnTaBort)
                        .addGap(36, 36, 36)
                        .addComponent(BtnRedigera))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblLeveransadress)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtLeveransAdress))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblFakturaadress)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtFakturaAdress, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblTelefonnummer)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtTelefonnummer, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblEpost)
                                        .addGap(31, 31, 31)
                                        .addComponent(txtEpost, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblFornamn)
                                            .addComponent(lblKundID))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtKundID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtFornamn, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblEfternamn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtEfternamn, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblHuvudmått, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtfHuvudmått, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnTillbaka)
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(BtnSpara)
                        .addGap(162, 162, 162))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblFakturaort)
                            .addComponent(lblLeveransort))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtLeveransort, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                            .addComponent(txtFakturaort))
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblKundID)
                    .addComponent(txtKundID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFornamn)
                    .addComponent(txtFornamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEfternamn)
                    .addComponent(txtEfternamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHuvudmått)
                    .addComponent(txtfHuvudmått, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEpost)
                    .addComponent(txtEpost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTelefonnummer)
                    .addComponent(txtTelefonnummer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLeveransadress)
                    .addComponent(txtLeveransAdress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLeveransort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLeveransort))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFakturaadress)
                    .addComponent(txtFakturaAdress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFakturaort)
                    .addComponent(txtFakturaort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnTaBort)
                    .addComponent(BtnRedigera)
                    .addComponent(BtnSpara)
                    .addComponent(btnTillbaka))
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaActionPerformed
        new AllaKunder(idb, inloggadAnvandare).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnTillbakaActionPerformed

    private void BtnSparaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSparaActionPerformed
        // Hämta värden från textfälten
        String fornamn = txtFornamn.getText();
        String efternamn = txtEfternamn.getText();
        String matt = txtfHuvudmått.getText();
        String epost = txtEpost.getText();
        String telefonnummer = txtTelefonnummer.getText();
        String leveransOrt = txtLeveransort.getText();
        String fakturaOrt = txtFakturaort.getText();
        String leveransAdress = txtLeveransAdress.getText();
        String fakturaAdress = txtFakturaAdress.getText();

        // Validera e-postadress
        if (!Validering.valideringEmail(epost)) {
            JOptionPane.showMessageDialog(this, "Ogiltig e-postadress.");
            return;
        }

        // Validera telefonnummer
        if (!Validering.valideringTelefon(telefonnummer)) {
            JOptionPane.showMessageDialog(this, "Ogiltigt telefonnummer. Använd formatet 123-456-7890.");
            return;
        }

        // Validera förnamn och efternamn
        if (fornamn == null || fornamn.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Förnamn kan inte vara tomt.");
            return;
        }
        if (efternamn == null || efternamn.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Efternamn kan inte vara tomt.");
            return;
        }

        // Validera huvudmått
        if (matt == null || matt.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Huvudmått kan inte vara tomt.");
            return;
        }

        // Validera leveransort
        if (leveransOrt == null || leveransOrt.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ort kan inte vara tom.");
            return;
        }
        
        // Validera fakturaort
        if (fakturaOrt == null || fakturaOrt.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ort kan inte vara tom.");
            return;
        }

        // Validera leveransadress
        if (leveransAdress == null || leveransAdress.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Leveransadress kan inte vara tom.");
            return;
        }

        // Validera fakturaadress
        if (fakturaAdress == null || fakturaAdress.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Fakturaadress kan inte vara tom.");
            return;
        }

        // Uppdatera kundens data i databasen om alla valideringar är godkända
        try {
            String updateQuery = "UPDATE Kund SET Fornamn = '" + fornamn + "', Efternamn = '" + efternamn
                    + "', Matt = '" + matt + "', Epost = '" + epost + "', Telefonnummer = '" + telefonnummer
                    + "', LeveransOrt = '" + leveransOrt + "', FakturaOrt = '" + fakturaOrt +"', LeveransAdress = '" + leveransAdress
                    + "', FakturaAdress = '" + fakturaAdress + "' WHERE KundID = " + kundID;
            idb.update(updateQuery);
            JOptionPane.showMessageDialog(this, "Kundinformation har uppdaterats.");

            // Gör textfälten icke-redigerbara igen
            setEditable(false);
            BtnRedigera.setEnabled(true); // Aktivera redigera-knappen igen
            BtnSpara.setEnabled(false); // Inaktivera Spara-knappen

        } catch (InfException ex) {
            JOptionPane.showMessageDialog(this, "Ett fel inträffade vid uppdatering av kundinformation: " + ex.getMessage());
        }
    }//GEN-LAST:event_BtnSparaActionPerformed

    private void BtnRedigeraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRedigeraActionPerformed
        setEditable(true); // Gör textfälten redigerbara
        BtnSpara.setEnabled(true); // Aktivera Spara-knappen
        BtnRedigera.setEnabled(false); // Deaktivera Redigera-knappen
    }//GEN-LAST:event_BtnRedigeraActionPerformed

    private void BtnTaBortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnTaBortActionPerformed
        try {
            // Bekräftelse om användaren verkligen vill ta bort kundens uppgifter
            int svar = JOptionPane.showConfirmDialog(this, "Vill du verkligen ta bort kundens uppgifter (förutom KundID)?", "Bekräfta", JOptionPane.YES_NO_OPTION);

            if (svar == JOptionPane.YES_OPTION) {
                // SQL-fråga med rätt kolumnnamn
                String rensaKundUppgifter = "UPDATE Kund SET "
                        + "Fornamn = NULL, "
                        + "Efternamn = NULL, "
                        + "Matt = NULL, "
                        + "Epost = NULL, "
                        + "Telefonnummer = NULL, "
                        + "LeveransOrt = NULL, "
                        + "FakturaOrt = NULL"
                        + "LeveransAdress = NULL, "
                        + "FakturaAdress = NULL "
                        + "WHERE KundID = " + kundID + ";";

                // Utför uppdateringen
                idb.update(rensaKundUppgifter);

                // Feedback till användaren
                JOptionPane.showMessageDialog(this, "Kundens uppgifter har rensats. KundID finns kvar.");
                this.dispose();
            }
        } catch (InfException ex) {
            JOptionPane.showMessageDialog(this, "Ett fel inträffade vid rensning av kundens uppgifter: " + ex.getMessage());
        }
    }//GEN-LAST:event_BtnTaBortActionPerformed

    private void txtfHuvudmåttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfHuvudmåttActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfHuvudmåttActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SpecifikKund.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SpecifikKund.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SpecifikKund.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SpecifikKund.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new SpecifikKund().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnRedigera;
    private javax.swing.JButton BtnSpara;
    private javax.swing.JButton BtnTaBort;
    private javax.swing.JButton btnTillbaka;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblEfternamn;
    private javax.swing.JLabel lblEpost;
    private javax.swing.JLabel lblFakturaadress;
    private javax.swing.JLabel lblFakturaort;
    private javax.swing.JLabel lblFornamn;
    private javax.swing.JLabel lblHuvudmått;
    private javax.swing.JLabel lblKundID;
    private javax.swing.JLabel lblLeveransadress;
    private javax.swing.JLabel lblLeveransort;
    private javax.swing.JLabel lblTelefonnummer;
    private javax.swing.JTextField txtEfternamn;
    private javax.swing.JTextField txtEpost;
    private javax.swing.JTextField txtFakturaAdress;
    private javax.swing.JTextField txtFakturaort;
    private javax.swing.JTextField txtFornamn;
    private javax.swing.JTextField txtKundID;
    private javax.swing.JTextField txtLeveransAdress;
    private javax.swing.JTextField txtLeveransort;
    private javax.swing.JTextField txtTelefonnummer;
    private javax.swing.JTextField txtfHuvudmått;
    // End of variables declaration//GEN-END:variables
}
