/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package hattmakarna;
import hattmakarna.SeVanligOrder;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author linodeluca
 */
public class SeAllaOrdrar extends javax.swing.JPanel {
private String inloggadAnvandare;
private InfDB idb;
private String klickatOrderNr;
    /**
     * Creates new form SeBestallning
     */
    public SeAllaOrdrar(InfDB idb, String ePost) {
        initComponents();
        this.idb = idb;
        this.inloggadAnvandare = ePost;
        String fraga = "select BestallningID, Status, Datum, Expressbestallning, TotalPris, Typ, KundID from Bestallning;";
        fyllTable(fraga);
    }
    
    public void fyllTable(String fraga){
        try {
            List<HashMap<String, String>> result = idb.fetchRows(fraga);

            DefaultTableModel model = (DefaultTableModel) BestallningsLista.getModel();
            model.setRowCount(0); // Rensa gamla data
            if (result != null) {
                for (HashMap<String, String> row : result) {
                    String expressHamtning = row.get("Expressbestallning");
                    String expressOmvandling;
                    double totalPris = Double.parseDouble(row.get("TotalPris"));

                    if(expressHamtning.equals("1")){
                        expressOmvandling = "Ja";
                        totalPris = totalPris * 1.2;
                    }
                    else{
                        expressOmvandling = "Nej";
                    }
                    // Lägg till en rad i JTable
                    model.addRow(new Object[]{
                        row.get("Typ"),
                        row.get("BestallningID"),
                        row.get("KundID"),
                        row.get("Status"),
                        totalPris,
                        row.get("Datum"),
                        expressOmvandling
                    });
                }
            } 
            else {
                System.out.println("Ingen data hittades i tabellen.");
            }

        } catch (InfException e) {
            JOptionPane.showMessageDialog(null, "Fel vid hämtning av data: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        tillbaka = new javax.swing.JButton();
        btnSeOrder = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        BestallningsLista = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();

        jTextField3.setText("jTextField1");

        jTextField4.setText("jTextField1");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tillbaka.setText("Tillbaka");
        tillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tillbakaActionPerformed(evt);
            }
        });

        btnSeOrder.setText("Se order");
        btnSeOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeOrderActionPerformed(evt);
            }
        });

        BestallningsLista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Ordertyp", "Ordernummer", "Kundnummer", "Status", "Pris", "Datum", "Expressbestallning"
            }
        ));
        jScrollPane1.setViewportView(BestallningsLista);

        jTextField1.setText("jTextField1");

        jTextField2.setText("jTextField1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 538, Short.MAX_VALUE)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(275, 275, 275)
                        .addComponent(tillbaka)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSeOrder)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(234, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSeOrder)
                    .addComponent(tillbaka))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(77, 77, 77))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tillbakaActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tillbakaActionPerformed

    private void btnSeOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeOrderActionPerformed
/*
        try{
            //Hämta raden som har markerats.
            int valdRad = BestallningsLista.getSelectedRow();

            //Om en rad inte är vald, visa felmeddelande.
            if(valdRad == -1){
                javax.swing.JOptionPane.showMessageDialog(this, "Markera en beställningsrad för att se ordern.");
                return;
            }
            //Hämtar och lagrar orderns typ från den valda raden i Jtable.
            String ordernsTyp = BestallningsLista.getValueAt(valdRad,0).toString();
            String typ = ordernsTyp;

            //Hämta Ordernr för den markerade raden och lagrar i klickatOrderNr så det kan skickas vidare till nästa klass.
            String Oid = BestallningsLista.getValueAt(valdRad,1).toString();
            klickatOrderNr = Oid;

            //Om det är en standardbeställning skickas man vidare till en gränssnitt som visar en "vanlig order" och detta gränssnitt stängs ner.
            if(typ.contains("Standard")){

                new SeVanligOrder(idb, inloggadAnvandare, klickatOrderNr).setVisible(true);
                this.dispose();
            }

            //Om beställningen är en specialbeställning visas gränssnittet för denna typ av beställning.
            else{
                new SeSpecialOrder(idb, inloggadAnvandare, klickatOrderNr).setVisible(true);
                this.dispose();

            }

        }
        catch(NumberFormatException ex){
            System.out.println(ex);
        }
*/
    }//GEN-LAST:event_btnSeOrderActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable BestallningsLista;
    private javax.swing.JButton btnSeOrder;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JButton tillbaka;
    // End of variables declaration//GEN-END:variables
}
